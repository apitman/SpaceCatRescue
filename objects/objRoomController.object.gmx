<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Constructor

// Initialize variables
drawVictoryText = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set victoryMode to false and go to the next room
global.victoryMode = false;
room_goto_next();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Respond to player input and victory conditions

var onLastLevel = room_next(room) == -1;

// Escape exits the game after it's over
if (onLastLevel &amp;&amp; global.victoryMode) {
    if (keyboard_check_pressed(vk_escape)){
        game_end();
    }
}

// Allow player to advance past title screen
if ((room == rmTitle || room == rmStory) &amp;&amp; keyboard_check_pressed(vk_enter) &amp;&amp; !onLastLevel) {
    room_goto_next();
} else if (room &gt; 0 &amp;&amp; !onLastLevel &amp;&amp; global.victoryMode &amp;&amp; alarm_get(0) &lt; 0) {
    // Set an alarm to go to the next level in a moment
    alarm_set(0, 60 * 2);
} else if (room == rmTutorial1 &amp;&amp; global.everReturnedToShip &amp;&amp; alarm_get(0) &lt; 0) {
    // Set an alarm to go to the next level in a moment
    global.victoryMode = true;
    alarm_set(0, 60 * 2);
} else if (global.victoryMode) {
    // Display victory text
    drawVictoryText = true;

    // Delay alarm to go to the next level if we aren't in the ship yet
    var delayAlarm = true;
    with (objShip) {
        if (image_index != 1) {
            delayAlarm = false;
        }
    }
    if (delayAlarm &amp;&amp; !onLastLevel) {
        alarm_set(0, 60 * 2);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw victory and story texts
var onLastLevel = room_next(room) == -1;

if (room == rmTitle) {
    // Draw text on title screen
    scriptWriteTitleScreen();
} else if (room == rmStory) {
    //var ln0 = "This is the maximum length of a line of dialog text.............";
    var line1 = "Your cat, Biggie, has been abducted. You've got no ammo, but you";
    var line2 = "do have something else you can launch at the prison ship holding";
    var line3 = "your cat... yourself. Become the one shot your ship can fire in";
    var line4 = "order to save your cat. Press Enter to continue.";
    scriptWriteDialog(line1, line2, line3, line4);
} else if (room == rmTutorial1) {
    // Write instructions at the top of the screen
    var line1 = "Press the left and right arrow keys to move side-to-side. When";
    var line2 = "you're ready, press the spacebar to launch yourself. Don't worry,";
    var line3 = "you've got a tether to the ship, so you'll be able to get back.";
    scriptWriteDialog(line1, line2, line3);
} else if (room == rmTutorial2) {
    // Write instructions at the top of the screen
    var line1 = "Press spacebar repeatedly after launching yourself to swing that";
    var line2 = "sword you've got. Destroy the ship holding Biggie, and rescue";
    var line3 = "him when he pops out!";
    scriptWriteDialog(line1, line2, line3);
} else if (room == rmBoss1) {
    // Write instructions at the top of the screen
    var line1 = "Biggie's in a bigger ship this time. Break him out and take";
    var line2 = "him home!";
    scriptWriteDialog(line1, line2);
} else if (room == rmBoss2) {
    // Write instructions at the top of the screen
    var line1 = "Same thing as before. Rescue Biggie!";
    scriptWriteDialog(line1);
}

if (drawVictoryText) {
    // Draw victory text
    if (room == rmTutorial1) {
        scriptWriteVictoryText(onLastLevel, "Good!");
    } else {
        scriptWriteVictoryText(onLastLevel);
    }
    // Draw game win text if this is the last room
    if (onLastLevel) {
        scriptWriteGameWinText();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
