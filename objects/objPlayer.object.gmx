<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Constructor

// Stop animation
image_speed = 0;
image_index = 3;

// Initialize variables
launchSpeed = -2;
vspeed = launchSpeed;
returning = false;
swinging = false;
swingAgain = false;
swingAnimationSpeed = 0.25;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle player input and hitting the top of the screen

// Return if you hit the top of the screen
if (y &lt;= 0 &amp;&amp; !returning) {
    returning = true;
    audio_play_sound(rubberBand, 10, false);
}

// Handle sword-swinging animations
if (image_index &gt;= image_number - 1) {
    image_index = image_number - 1; // Handle partial animation completions
    image_speed = 0;
    swinging = false;
}
if (swingAgain || keyboard_check_pressed(vk_space)) {
    swingAgain = false;
    if (swinging = true) {
        // Buffer input
        swingAgain = true;
    } else {
        image_index = 0;
        image_speed = swingAnimationSpeed; // game is running at 60 fps
        swinging = true;
        audio_play_sound(swordSwing, 9, false);
    }
}

// Set vspeed if returning
if (returning) {
    vspeed = -1 * launchSpeed;
}

// Destroy objPlayer if we have finished returning to the ship
with (objShip) {
    if (y &lt; (other.y + 100 * other.vspeed)) {
        with (objViewController) {
            zoomIn = false;
            zoomOut = true;
        }
    }
    if (y &lt; (other.y + other.vspeed)) {
        other.vspeed = 0;
        fireMode = false;
        image_index = 0;
        instance_destroy(other);

        // Disable the shoot button for a period of 2 seconds
        reloading = true;
        alarm_set(0, 60 * 2);

        // Play reverse airlock sounds
        audio_play_sound(whooshReverse, 10, false);
        audio_play_sound(latch, 10, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objShipTile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the ship tile if player is swinging
if (other.swinging) {
    instance_destroy(self);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Affect the player's movement
if (swinging) {
    // TODO: Add slowdown/climbing/screenshake here
} else {
    returning = true;
    audio_play_sound(headBump, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
